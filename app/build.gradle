plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.google.devtools.ksp"
    id 'androidx.navigation.safeargs'
}

android {
    namespace 'com.example.importanttodos'
    compileSdkVersion 35
    buildToolsVersion "35.0.0"

    defaultConfig {
        applicationId "com.example.importanttodos"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments(
                optionsAnnotationPackage: "com.example.importanttodos.test"
        )
        ksp {
            arg("room.incremental", "true")
            arg("room.expandProjection", "true")
        }
        testOptions {
            execution 'ANDROIDX_TEST_ORCHESTRATOR'
            animationsDisabled true
        }

    }
    kotlin {
        jvmToolchain(17)
    }

    buildFeatures {
        dataBinding true
        buildConfig true
    }
    sourceSets {
        androidTest {
            assets.srcDirs = ['src/androidTest/assets']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

}

configurations.configureEach {
    resolutionStrategy {
        force "androidx.tracing:tracing:1.3.0"
        force "androidx.tracing:tracing-android:1.3.0"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.4'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation "androidx.tracing:tracing:1.3.0"
    implementation "androidx.tracing:tracing-android:1.3.0"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation 'io.mockk:mockk:1.13.8'
    testImplementation "com.google.truth:truth:1.2.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2'

    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.10.2'

    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    androidTestImplementation "com.google.truth:truth:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    androidTestImplementation 'androidx.test:runner:1.6.2'
    androidTestImplementation 'androidx.test:rules:1.6.1'
    androidTestUtil        'androidx.test:orchestrator:1.6.0-beta01'
    androidTestImplementation('com.adevinta.android:barista:4.2.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation('androidx.test.espresso:espresso-accessibility:3.5.1') {
        exclude group: 'org.checkerframework', module: 'checker'
    }

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
}


tasks.register("unitTests") {
    group = "verification"
    description = "Executa unit tests via testDebugUnitTest"
    dependsOn "testDebugUnitTest"
}

tasks.register("integrationTests", Exec) {
    group = "verification"
    description = "Executa integration tests"
    workingDir = project.rootDir
    executable = './gradlew'
    args = [
            "connectedDebugAndroidTest",
            "-Pandroid.testInstrumentationRunnerArguments.package=com.example.importanttodos.test.integration"
    ]
}

tasks.register("uiTests", Exec) {
    group = "verification"
    description = "Executa UI tests no pacote test.ui"
    workingDir = project.rootDir
    executable = "./gradlew"
    args = [
            "connectedDebugAndroidTest",
            "-Pandroid.testInstrumentationRunnerArguments.package=com.example.importanttodos.test.ui"
    ]
}